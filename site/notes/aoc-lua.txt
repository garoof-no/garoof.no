# Some Advent of Code Lua
:pub ZkE3Ob
:blurb Lua uf advent.
:template lua

A few notes to self, in case I'm looking for previous stuff to copypaste in some future december or something...

* ^https://lua.garoof.no/?code=DYewxghsAEBmB2EC2BTAUAS1tA7igRtAC4AWK8a0uBAdERkcCgBQBEAgiAMLT4ooAHXiBADWASkpxEqaAF5orDPAEBXIqyl58NWBibMEyFJJTAAzuipHZCiACcA5tAjwAJi6cBtAIwBdNHI3NDRQSBhsAB4wUEsAPnlpYxd3aAwQGlFyQxkTELCoOFV4MHoQeGhzIlVYZmBlPKoCmHsUc0SfKVgQexcAGl40ivr4FAAuRyQIIjASNgBSZmZ5twBqcWhlt3F58QloNxApKlb2hVPoACpNonLVJD57ZggN1eI7h5Qn-HFJKiCpK1qvYKqdAu58uBCrBiqV0hVzCBgAA3FgjNp-aDNaAXBQABi6PSxDSGxNG7UOxxxbUSpzeVRqdQamIBJxQwNBbXBwVCUJgKAAHsgBEwqr0FF4vGhmD4AEzQWUbZgAZmgyskzAALNAAKyapUANgNuqVAHZoKaNeaABySPwBNACezKIhsHAMEjQQXCphjCSO53wV2IlEsb1IEVtIj2CZTGZzVheAB6AB14H5VhJfphsNhSOQpE6XWw0+7SHB9CghmoiH7MUWg8wQ6jDGN0eZmL9TBCgA Some example code.^ Does the file stuff that usually needs to be done and the "works in the browser as well" thing.
* If not line by line: Possibly `f:read("*all")` instead of `f:lines()`.
* ^https://www.lua.org/manual/5.4/manual.html#6.4.1 This area of the Lua manual^ is sometimes handy.
* Cataphatically matching on and grabbing what I want is often preferable to apophatically splitting on what I don't want.
* `string.find` returns start index and stop index if it finds. Sometimes I wanna pass those on to `string.sub`. Sometimes I wanna keep finding from the stop index + 1.

### 2D maps and vectors

If I want to e.g. use x,y-positions as keys in a table, for each unique unique x,y-value there is only one table. "Constructing" the same position twice gives me two references to the same table, and not two tables with equal x and y values:

``` run
vecs = setmetatable({}, { __mode = "v" })
Vec = {}

function vec(x, y)
  local key = x .. "," .. y
  local found = vecs[key]
  if found then return found end
  local v = setmetatable({ x = x, y = y}, Vec)
  vecs[key] = v
  return v
end

function Vec.__add(a, b) return vec(a.x + b.x, a.y + b.y) end
function Vec.__tostring(a) return a.x .. "," .. a.y end

N, E, S, W = vec(0, -1), vec(1, 0), vec(0, 1), vec(-1, 0)
NW, NE, SE, SW = N + W, N + E, S + E, S + W
dirs = { NW, N, NE, E, SE, S, SW, W }
```

See also: ^https://www.lua.org/pil/17.1.html Programming in Lua: 17.1 â€“ Memoize Functions^.

The "weak" stuff (`__mode = "v"`) is not usually important particularly important for AoC stuff. I typically use vectors for positions and also for directions.

Stuff like this can happen:

``` run
function mappy(lines)
  local map = {}
  local y = 0
  for line in lines do
    local x = 0
    for c in line:gmatch(".") do
      map[vec(x, y)] = c
      x = x + 1
    end
    y = y + 1
  end
  return map
end
```

``` repl
example = [[
qweqweqwe
asdasdasd
dsfsdfdsf
]]

map = mappy(example:gmatch("[^\n]+"))

for k, v in pairs(map) do print(k, v) end
```

